{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","trans","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";AAAA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,UAE/BE,EAAN,otCAsDIC,EAAU,GACVC,EAAI,EACFC,EAAQ,CACJ,KAAA,OACD,IAAA,SAGLC,EAAO,SAAPA,IACAC,WAAW,WACPJ,GAAWE,EAAMH,EAAOE,KAAOF,EAAOE,GACtCN,EAAKU,UAAYL,EACjBF,EAAMO,UAAYN,EAAOO,UAAU,EAAGL,GACtCM,OAAOC,SAAS,EAAG,MACnBb,EAAKa,SAAS,EAAG,MACbP,EAAIF,EAAOU,OAAS,IACpBR,GAAK,EACLE,MAEL,KAGPA","file":"main.f8c31b40.js","sourceRoot":"..\\src","sourcesContent":["const html = document.querySelector(\"#html\");\r\nconst style = document.querySelector(\"#style\");\r\n\r\nconst string = `/* hi\r\n * 我们来画一个太极图吧\r\n * 首先准备一个div\r\n */\r\n #div{\r\n    border: 1px solid black;\r\n    width: 200px;\r\n    height: 200px;\r\n }\r\n /* 接下来把 div 变成一个圆 */\r\n #div{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n    border: none;\r\n }\r\n /* 太极是阴阳形成的\r\n * 一黑一白\r\n */\r\n#div{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 太极生两仪 */\r\n#div::before{\r\n    width: 100px;\r\n    height: 100px;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #000;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 20%, rgba(0,0,0,1) 20%, rgba(0,0,0,1) 100%);\r\n}\r\n#div::after{\r\n    width: 100px;\r\n    height: 100px;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 20%, rgba(255,255,255,1) 20%, rgba(255,255,255,1) 100%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 一个太极图就画好啦\r\n * 现在我们让它转起来\r\n*/\r\n@keyframes rotation {\r\n    from { transform: rotate(0deg); }\r\n    to { transform: rotate(360deg); }\r\n}\r\n#div{\r\n    animation: rotation 10s linear infinite;\r\n}\r\n`;\r\n\r\nlet string2 = \"\";\r\nlet n = 0;\r\nconst trans = {\r\n    \"\\n\": \"<br>\",\r\n    \" \": \"&nbsp\",\r\n};\r\n\r\nlet step = () => {\r\n    setTimeout(() => {\r\n        string2 += trans[string[n]] || string[n];\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        window.scrollTo(0, 9999);\r\n        html.scrollTo(0, 9999);\r\n        if (n < string.length - 1) {\r\n            n += 1;\r\n            step();\r\n        }\r\n    }, 30);\r\n}\r\n\r\nstep();"]}